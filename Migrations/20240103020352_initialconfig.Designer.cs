// <auto-generated />
using System;
using InventoryManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManagement.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20240103020352_initialconfig")]
    partial class initialconfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagement.Models.Detail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DetailId");

                    b.ToTable("Detail", (string)null);

                    b.HasData(
                        new
                        {
                            DetailId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 3, 52, 39, DateTimeKind.Local).AddTicks(9289),
                            Name = "Dimension"
                        },
                        new
                        {
                            DetailId = 2,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 3, 52, 39, DateTimeKind.Local).AddTicks(9300),
                            Name = "Weight"
                        },
                        new
                        {
                            DetailId = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 3, 52, 39, DateTimeKind.Local).AddTicks(9301),
                            Name = "Sell Price"
                        },
                        new
                        {
                            DetailId = 4,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 3, 52, 39, DateTimeKind.Local).AddTicks(9302),
                            Name = "Warehouse"
                        });
                });

            modelBuilder.Entity("InventoryManagement.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("InventoryManagement.Models.InventoryDetail", b =>
                {
                    b.Property<int>("InventoryDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryDetailId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetailID")
                        .HasColumnType("int");

                    b.Property<int>("InventoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InventoryDetailId");

                    b.HasIndex("DetailID")
                        .IsUnique();

                    b.HasIndex("InventoryID");

                    b.ToTable("InventoryDetail", (string)null);
                });

            modelBuilder.Entity("InventoryManagement.Models.InventoryMedia", b =>
                {
                    b.Property<int>("InventoryMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryMediaId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("InventoryMediaId");

                    b.HasIndex("InventoryID");

                    b.ToTable("InventoryMedia", (string)null);
                });

            modelBuilder.Entity("InventoryManagement.Models.InventoryDetail", b =>
                {
                    b.HasOne("InventoryManagement.Models.Detail", "Detail")
                        .WithOne("InventoryDetail")
                        .HasForeignKey("InventoryManagement.Models.InventoryDetail", "DetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryManagement.Models.Inventory", "Inventory")
                        .WithMany("InventoryDetails")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("InventoryManagement.Models.InventoryMedia", b =>
                {
                    b.HasOne("InventoryManagement.Models.Inventory", "Inventory")
                        .WithMany("InventoryMedias")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("InventoryManagement.Models.Detail", b =>
                {
                    b.Navigation("InventoryDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryManagement.Models.Inventory", b =>
                {
                    b.Navigation("InventoryDetails");

                    b.Navigation("InventoryMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
